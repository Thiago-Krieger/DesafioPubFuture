// <auto-generated />
using System;
using DesafioPubFuture.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DesafioPubFuture.Migrations
{
    [DbContext(typeof(FinancasContext))]
    partial class FinancasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DesafioPubFuture.Models.Conta", b =>
                {
                    b.Property<int>("ContaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContaId"), 1L, 1);

                    b.Property<string>("InstituicaoFinanceira")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumeroConta")
                        .HasColumnType("int");

                    b.Property<float>("Saldo")
                        .HasColumnType("real");

                    b.Property<string>("TipoConta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContaId");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("DesafioPubFuture.Models.Despesa", b =>
                {
                    b.Property<int>("DespesaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DespesaId"), 1L, 1);

                    b.Property<int?>("ContaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPagamentoEsperado")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoDespesa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("DespesaId");

                    b.HasIndex("ContaId");

                    b.ToTable("Despesas");
                });

            modelBuilder.Entity("DesafioPubFuture.Models.Receita", b =>
                {
                    b.Property<int>("ReceitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceitaId"), 1L, 1);

                    b.Property<int?>("ContaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataRecebimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRecebimentoEsperado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoReceita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("ReceitaId");

                    b.HasIndex("ContaId");

                    b.ToTable("Receitas");
                });

            modelBuilder.Entity("DesafioPubFuture.Models.Despesa", b =>
                {
                    b.HasOne("DesafioPubFuture.Models.Conta", null)
                        .WithMany("Despesas")
                        .HasForeignKey("ContaId");
                });

            modelBuilder.Entity("DesafioPubFuture.Models.Receita", b =>
                {
                    b.HasOne("DesafioPubFuture.Models.Conta", null)
                        .WithMany("Receitas")
                        .HasForeignKey("ContaId");
                });

            modelBuilder.Entity("DesafioPubFuture.Models.Conta", b =>
                {
                    b.Navigation("Despesas");

                    b.Navigation("Receitas");
                });
#pragma warning restore 612, 618
        }
    }
}
